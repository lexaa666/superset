# name: Docker Image CI

# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

# jobs:

#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Build the Docker image
#       run: docker build . --file Dockerfile --tag alekseyddd/mysuperset:vo1

name: Publish Docker image

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.LGN_DOCKERHUB }}
          password: ${{ secrets.PWD_DOCKERHUB }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: alekseyddd/mysuperset
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: alekseyddd/mysuperset:latest
          ##labels: # steps.meta.outputs.labels

      - name: Deploy
        uses: actions/checkout@v2 
        env:
            PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            HOSTNAME: ${{secrets.SSH_HOST}}
            USER_NAME: ${{secrets.USER_NAME}}
        
            script: |
              echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
              ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '

                  # Now we have got the access of EC2 and we will start the deploy .
                  cd /home/ubuntu/ &&
                  mkdir github_action
                  '
